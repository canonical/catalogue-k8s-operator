# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.
[project]
name = "catalogue-k8s"
version = "0.0"
requires-python = "~=3.8"

dependencies = [
  "ops",
  "lightkube",
  "lightkube-models",
  "jsonschema",
  "cryptography",
  "opentelemetry-exporter-otlp-proto-http==1.21.0",
  "pydantic>=2",  # istio-beacon lib requirement
]

[project.optional-dependencies]
dev = [
  # Linting
  "ruff",
  "codespell",
  # Static
  "pyright",
  "responses==0.20.0",
  "httpcore",
  # Unit
  "pytest",
  "coverage[toml]",
  "deepdiff",
  "fs",
  # Interface
  "pytest-interface-tester",
  # Integration
  "juju",
  "pytest-operator",
  "aiohttp!=3.11.13",  # Yanked
  "prometheus-api-client",
  "requests",
  "tenacity",
  "sh",
]

# Testing tools configuration
[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

# Formatting tools configuration
[tool.black]
line-length = 99
target-version = ["py38"]

# Linting tools configuration
[tool.ruff]
line-length = 99
extend-exclude = ["__pycache__", "*.egg_info"]

[tool.ruff.lint]
select = ["E", "W", "F", "C", "N", "R", "D", "I001"]
# Ignore E501 because using black creates errors with this
# Ignore D107 Missing docstring in __init__
ignore = ["E501", "D107"]
# D100, D101, D102, D103: Ignore missing docstrings in tests
per-file-ignores = {"tests/*" = ["D100","D101","D102","D103"]}

[lint.pydocstyle]
convention = "google"

[tool.pyright]
extraPaths = ["src", "lib"]
pythonVersion = "3.8"
pythonPlatform = "Linux"

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"
asyncio_mode = "auto"
addopts = "--tb=native --verbose --capture=no --log-cli-level=INFO"
markers = ["setup", "work", "teardown"]

[tool.codespell]
skip = ".git,.tox,build,venv*"
ignore-words-list = "assertIn"

# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.
[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, static-{charm,lib}, unit

[vars]
src_path = {toxinidir}/src
tst_path = {toxinidir}/tests
lib_path = {toxinidir}/lib/charms/catalogue_k8s
all_path = {[vars]src_path} {[vars]tst_path} {[vars]lib_path}

[testenv]
basepython = python3
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  HOME
  PATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS
  HTTP_PROXY
  HTTPS_PROXY
  NO_PROXY

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    ruff
commands =
    ruff --fix {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    ruff
    codespell
commands =
    codespell {[vars]lib_path}
    codespell . --skip .git --skip .tox --skip build --skip lib --skip venv --skip .mypy_cache
    ruff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:static-{charm,lib}]
description = Run static analysis checks
deps =
    pyright
    charm: -r{toxinidir}/requirements.txt
    lib: ops
    charm: responses==0.20.0
    charm: httpcore==0.14.7
commands =
    charm: pyright {[vars]src_path} {posargs}
    lib: pyright --pythonversion 3.8 {[vars]lib_path} {posargs}
    lib: /usr/bin/env sh -c 'for m in $(git diff main --name-only {[vars]lib_path}); do if ! git diff main -- $m | grep -q "+LIBPATCH\|+LIBAPI"; then echo "You forgot to bump the version on $m!"; exit 1; fi; done'
allowlist_externals = /usr/bin/env

[testenv:unit]
description = Run unit tests
deps =
    fs
    pytest
    coverage[toml]
    responses==0.20.0
    -r{toxinidir}/requirements.txt
    deepdiff
    httpcore==0.14.7
commands =
    python -m doctest {[vars]src_path}/charm.py
    coverage run \
      --source={[vars]src_path},{[vars]lib_path} \
      -m pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tst_path}/unit
    coverage report
allowlist_externals =
    /usr/bin/env

[testenv:integration]
description = Run integration tests
deps =
    aiohttp
    deepdiff
    #juju
    #git+https://github.com/juju/python-libjuju.git
    juju
    lightkube >= 0.11
    lightkube-models >= 1.22.0.4
    pytest
    pytest-operator
    prometheus-api-client
    tenacity
commands =
    pytest -vv --tb native --log-cli-level=INFO --color=yes -s {posargs} {toxinidir}/tests/integration
allowlist_externals =
    /usr/bin/env

[testenv:integration-lma]
description = Run lma bundle integration tests but with prometheus built from source
lma_bundle_dir = {envtmpdir}/lma-light-bundle
deps =
    # deps from lma-bundle - these are needed here because will be running pytest on lma-bundle
    jinja2
    juju
    pytest
    pytest-operator
allowlist_externals =
    git
commands =
    git clone --single-branch --depth=1 https://github.com/canonical/lma-light-bundle.git {[testenv:integration-lma]lma_bundle_dir}
    # run pytest on the integration tests of the lma bundle, but override alertmanager with path to
    # this source dir
    pytest -v --tb native --log-cli-level=INFO -s --prometheus={toxinidir} {posargs} {[testenv:integration-lma]lma_bundle_dir}/tests/integration
